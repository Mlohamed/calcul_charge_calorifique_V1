
import pandas as pd
import streamlit as st
from io import BytesIO

st.set_page_config(page_title="Calcul de charge calorifique", layout="centered")

st.title("üî• Calcul de la charge calorifique en tunnel")
st.markdown("""
Ce calculateur vous permet d'estimer l'√©nergie thermique lib√©r√©e en cas d'incendie pour diff√©rents √©l√©ments install√©s dans un tunnel (c√¢bles, couvercles FRP, etc.).
""")

# Formulaire de saisie
elements = []
st.subheader("Ajouter un √©l√©ment")

with st.form("element_form"):
    element = st.text_input("Nom de l'√©l√©ment", "C√¢ble √©lectrique")
    unite = st.selectbox("Unit√© de mesure", ["m", "m¬≤"])
    quantite = st.number_input("Quantit√© (longueur ou surface)", min_value=0.0, step=1.0)
    masse = st.number_input("Masse lin√©aire ou surfacique (kg/unit√©)", min_value=0.0, step=0.1)
    pcs = st.number_input("Pouvoir calorifique sup√©rieur (MJ/kg)", min_value=0.0, step=0.5)
    submit = st.form_submit_button("Ajouter")

    if submit and element:
        st.session_state.setdefault("elements", []).append({
            "√âl√©ment": element,
            "Unit√© de mesure": unite,
            "Quantit√©": quantite,
            "Masse (kg/unit√©)": masse,
            "PCS (MJ/kg)": pcs
        })

# Affichage des r√©sultats
if "elements" in st.session_state and st.session_state["elements"]:
    df = pd.DataFrame(st.session_state["elements"])
    df["Charge calorifique (MJ)"] = df["Quantit√©"] * df["Masse (kg/unit√©)"] * df["PCS (MJ/kg)"]
    df["√âquiv. litres essence"] = df["Charge calorifique (MJ)"] / 34

    st.subheader("üßÆ R√©sultat")
    st.dataframe(df, use_container_width=True)

    total_mj = df["Charge calorifique (MJ)"].sum()
    total_l = df["√âquiv. litres essence"].sum()

    st.markdown(f"**‚û°Ô∏è Charge calorifique totale : {total_mj:.2f} MJ**")
    st.markdown(f"**‚û°Ô∏è √âquivalent essence : {total_l:.2f} litres**")

    # T√©l√©chargement Excel corrig√©
    output = BytesIO()
    df.to_excel(output, index=False, engine='openpyxl')
    processed_data = output.getvalue()

    st.download_button(
        label="üì• T√©l√©charger le tableau en Excel",
        data=processed_data,
        file_name="charge_calorifique_tunnel.xlsx",
        mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
    )
else:
    st.info("Ajoutez au moins un √©l√©ment pour afficher les r√©sultats.")
